<?php

namespace Wimp\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * VideoModelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VideoModelRepository extends EntityRepository
{
	public function loadFirstVideos()
	{
		$q = '
			SELECT v
			FROM WimpAppBundle:VideoModel v
			WHERE v.id > ?0 - 30
			ORDER BY v.id DESC
		';
		$q2 = '(SELECT MAX(vm.id) FROM wimp_videos vm)';

		// print_r($this->executeQuery( $q2 ));die;
		$videos = $this->executeQuery( $q, array('56'/*$q2*/) );
		// print_r(count($videos));die;
		return $videos;
	}

	public function getVideosForSlug($slug)
	{
		$q = '
			SELECT v
			FROM WimpAppBundle:VideoModel v
			WHERE v.id > ?0 AND v.id < ?1
			ORDER BY v.id DESC
		';

		$id = $this->getIdForSlug($slug);
		$videos = $this->executeQuery( $q, array($id - 30, $id + 30) );
		return $videos;
	}

	public function getNextVideos($id = 0, $reverse)
	{
		$q = '
			SELECT v
			FROM WimpAppBundle:VideoModel v
			WHERE v.id > ?0 AND v.id < ?1
			ORDER BY v.id DESC
		';

		$videos = $this->executeQuery( $q, array($id - (!$reverse?30:0), $id + ($reverse?30:0)) );
		return $videos;
	}

	public function getVideosRandomized($max = 30)
	{
		$q = 'SELECT v FROM WimpAppBundle:VideoModel v';
		$offset = rand(0, $max - 30);

		$videos = $this->executeQuery( $q, array(), 30, $offset );
		return $videos;
	}

	public function getVideosBySearchWord($searchWord)
	{
		$q = '
			SELECT v
			FROM WimpAppBundle:VideoModel v
			WHERE 
				v.title LIKE :searchWord
			OR 	v.secondTitle LIKE :searchWord
			OR 	v.slug LIKE :searchWord
			ORDER BY v.id DESC
		';

		$videos = $this->executeQuery( $q, array('searchWord' => '%'.$searchWord.'%'), 15 );
		return $videos;
	}

	private function getIdForSlug($slug)
	{
		$q = '
			SELECT v.id 
			FROM WimpAppBundle:VideoModel v 
			WHERE v.slug LIKE :slug
			ORDER BY v.id DESC
		';

		$id = $this->executeQuery( $q, array('slug' => $slug) );
		return intval($id[0]['id']);
	}

	public function getMaxResults()
	{
		return $this->executeQuery( 'SELECT count(v.id) FROM WimpAppBundle:VideoModel v' );
	}

	private function executeQuery( $q, $paramaters = array(), $limit = 60, $offset = 0 )
	{
		$query = $this->getEntityManager()
			->createQuery( $q );

		foreach ($paramaters as $key => $value)
			$query->setParameter($key, $value);

		return	$query
			->setFirstResult( $offset )
			->setMaxResults( $limit )
			->getResult();
	}
}
